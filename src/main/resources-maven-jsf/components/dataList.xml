<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE component SYSTEM "../misc/component.dtd" [
<!ENTITY standard_uicomponent_attributes	SYSTEM "../entities/standard_uicomponent_attributes.xml">
<!ENTITY widget_var_attribute			SYSTEM "../entities/widget_var_attribute.xml">
]>
<component>
    <tag>dataList</tag>
    <tagClass>org.helix.mobile.component.datalist.DataListTag</tagClass>
    <componentClass>org.helix.mobile.component.datalist.DataList</componentClass>
    <componentType>org.helix.mobile.component.DataList</componentType>
    <componentFamily>org.helix.mobile.component</componentFamily>
    <rendererType>org.helix.mobile.component.DataListRenderer</rendererType>
    <rendererClass>org.helix.mobile.component.datalist.DataListRenderer</rendererClass>
    <parent>javax.faces.component.UIPanel</parent>
    <description>DataList is an enhanced version of the standard jQuery Mobile DataList that includes support for offline synchronization.</description>
    <interfaces>
        <interface>
            <name>org.primefaces.component.api.Widget</name>
        </interface>
    </interfaces>
    <attributes>
		&widget_var_attribute;
        <attribute>
            <name>selectAction</name>
            <required>false</required>
            <type>java.lang.String</type>
            <description>JavaScript expression to invoke when the user taps a list item.</description>
        </attribute>
        <attribute>
            <name>swipeLeftAction</name>
            <required>false</required>
            <type>java.lang.String</type>
            <description>Function accepting a list row as an argument to be invoked on swipe left.</description>
        </attribute>
        <attribute>
            <name>swipeRightAction</name>
            <required>false</required>
            <type>java.lang.String</type>
            <description>Function accepting a list row as an argument to be invoked on swipe right.</description>
        </attribute>
        <attribute>
            <name>itemContextMenu</name>
            <required>false</required>
            <type>java.lang.String</type>
            <description>ID of a popup to display when the user executes the context action on a list item.</description>
        </attribute>
        <attribute>
            <name>itemContextMenuFilter</name>
            <required>false</required>
            <type>java.lang.String</type>
            <description>Function accepting a single argument, a row record, and returning true if the context menu should be attached.</description>
        </attribute>
        <attribute>
            <name>holdAction</name>
            <required>false</required>
            <type>java.lang.String</type>
            <description>JavaScript expresssion to invoke when the user executes the context action on a list item.</description>
        </attribute>
        <attribute>
            <name>condition</name>
            <required>false</required>
            <type>java.lang.String</type>
            <description>JavaScript expression that, if true, means the table should be rendered and, if false, means the table should be hidden.</description>
        </attribute>
        <attribute>
            <name>itemList</name>
            <required>true</required>
            <type>java.lang.String</type>
            <description>JavaScript expression that evaluates to a PersistenceJS QueryCollection of objects, each of which corresponds to one row in the table.</description>
        </attribute>
        <attribute>
            <name>itemsPerPage</name>
            <required>false</required>
            <type>java.lang.String</type>
            <description>Number of items to display on each page. If this argument is omitted, then no pagination is used.</description>
        </attribute>
        <attribute>
            <name>rowRenderer</name>
            <required>false</required>
            <type>java.lang.String</type>
            <description>Java script expression that renders a single row of data. Parameters are the parentDiv (enclosing the row) and the row (the row data).</description>
        </attribute>
        <attribute>
            <name>emptyMessage</name>
            <required>false</required>
            <type>java.lang.String</type>
            <defaultValue>No records found.</defaultValue>
            <description>Text to display when there is no data to display. Default is "No records found."</description>
        </attribute>
        <attribute>
            <name>emptyHook</name>
            <required>false</required>
            <type>java.lang.String</type>
            <description>Name of a function to call when the list is refreshed to empty.</description>
        </attribute>
        <attribute>
            <name>emptyGroupMessage</name>
            <required>false</required>
            <type>java.lang.String</type>
            <defaultValue>There are no items to display in this group.</defaultValue>
            <description>Text to display when there is no data to display in a group. Default is 'There are no items to display in this group.'</description>
        </attribute>
        <attribute>
            <name>style</name>
            <required>false</required>
            <type>java.lang.String</type>
            <description>Inline style of the main container.</description>
        </attribute>
        <attribute>
            <name>styleClass</name>
            <required>false</required>
            <type>java.lang.String</type>
            <description>Style class of the main container.</description>
        </attribute>
        <attribute>
            <name>listStyleClass</name>
            <required>false</required>
            <type>java.lang.String</type>
            <description>Style class of the list.</description>
        </attribute>
        <attribute>
            <name>rowStyleClass</name>
            <required>false</required>
            <type>java.lang.String</type>
            <description>Style class for each row.</description>
        </attribute>
        <attribute>
            <name>dividerStyleClass</name>
            <required>false</required>
            <type>java.lang.String</type>
            <description>Style class for each divider row in a grouped list.</description>
        </attribute>
        <attribute>
            <name>sortButton</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
            <defaultValue>true</defaultValue>
            <description>Should the sort button be displayed.</description>
        </attribute>
        <attribute>
            <name>filterButton</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
            <defaultValue>true</defaultValue>
            <description>Should the filter button be displayed.</description>
        </attribute>
        <attribute>
            <name>sortBy</name>
            <required>false</required>
            <type>java.lang.Object</type>
            <description>Object field(s) to be used for default sorting.</description>
        </attribute>
        <attribute>
            <name>sortOrder</name>
            <required>false</required>
            <type>java.lang.String</type>
            <defaultValue>ascending</defaultValue>
            <description>Sets sorting order. Default is "ascending"</description>
        </attribute>
        <attribute>
            <name>groupBy</name>
            <required>false</required>
            <type>java.lang.Object</type>
            <description>Object field(s) to be used for default grouping. This is intended to be used in conjunction with autodividers.</description>
        </attribute>
        <attribute>
            <name>groupByOrder</name>
            <required>false</required>
            <type>java.lang.String</type>
            <defaultValue>ascending</defaultValue>
            <description>Sets grouping order. Default is "ascending."</description>
        </attribute>
        <attribute>
            <name>onSort</name>
            <required>false</required>
            <type>java.lang.String</type>
            <description>Callback to invoke on sort. Accepts the field and sort order as arguments.</description>
        </attribute>
        <attribute>
            <name>doThisFilter</name>
            <required>false</required>
            <type>java.lang.String</type>
            <description>Callback to invoke to filter the list based on the currently selected item.  Accepts the current query collection, the sort field, and the selected row as arguments. Returns the filtered query collection.</description>
        </attribute>
        <attribute>
            <name>doGlobalFilter</name>
            <required>false</required>
            <type>java.lang.String</type>
            <description>Callback to invoke to filter the list based on a specific field and value. Accepts the current query collection, the sort field, and the selected value as arguments. Returns the filtered query collection.</description>
        </attribute>
        <attribute>
            <name>onFilterMenuOpen</name>
            <required>false</required>
            <type>java.lang.String</type>
            <description>Callback to invoke to when the global filter menu opens.</description>
        </attribute>
        <attribute>
            <name>onFilterDone</name>
            <required>false</required>
            <type>java.lang.String</type>
            <description>Callback to invoke when filtering is complete.</description>
        </attribute>
        <attribute>
            <name>grouped</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
            <defaultValue>false</defaultValue>
            <description>Is this a grouped list? Default is false.</description>
        </attribute>
        <attribute>
            <name>groupName</name>
            <required>false</required>
            <type>java.lang.String</type>
            <defaultValue>false</defaultValue>
            <description>Function to invoke on a row to get the group name in a grouped list.</description>
        </attribute>
        <attribute>
            <name>groupMembers</name>
            <required>false</required>
            <type>java.lang.String</type>
            <defaultValue>false</defaultValue>
            <description>Function to invoke on a row to get the group members in a grouped list.</description>
        </attribute>
        <attribute>
            <name>groupRenderer</name>
            <required>false</required>
            <type>java.lang.String</type>
            <defaultValue>null</defaultValue>
            <description>Function to map a group to a renderer for that group. If omitted, then a rowRenderer must be specified.</description>
        </attribute>
        <attribute>
            <name>itemsPerGroup</name>
            <required>false</required>
            <type>java.lang.String</type>
            <description>Maximum number of items to display in each group in a grouped list. If more than this number are in a group, a more item is added to the list.</description>
        </attribute>
        <attribute>
            <name>groupOverflowText</name>
            <required>false</required>
            <type>java.lang.String</type>
            <description>Text to display when a group has more elements than itemsPerGroup</description>
        </attribute>
        <attribute>
            <name>groupOverflowTextClass</name>
            <required>false</required>
            <type>java.lang.String</type>
            <description>Text class to style the text when a group has an overflow item</description>
        </attribute>
        <attribute>
            <name>groupOverflowFn</name>
            <required>false</required>
            <type>java.lang.String</type>
            <description>Function to be called when the overflow item within a group is tapped.</description>
        </attribute>
        <attribute>
            <name>groupIndexedSearch</name>
            <required>false</required>
            <type>java.lang.String</type>
            <description>Function that executes an indexed search within a single group. Used for grouped lists.</description>
        </attribute>        
        <attribute>
            <name>strings</name>
            <required>false</required>
            <type>java.lang.String</type>
            <description>List of strings to supply to the renderer. Useful for internationalizing boilerplate text via JSF.</description>
        </attribute>
        <attribute>
            <name>type</name>
            <required>false</required>
            <type>java.lang.String</type>
            <description>Set to inset to get the jQuery mobile inset appearance.</description>
        </attribute>
        <attribute>
            <name>indexedSearch</name>
            <required>false</required>
            <type>java.lang.String</type>
            <description>Enables free text search. Supply a function that accepts three arguments, the search query, a completion function, and an optional query collection that results form the local search. The completion should be invoked with a filtered query collection as its only argument.</description>
        </attribute>
        <attribute>
            <name>localIndexedSearch</name>
            <required>false</required>
            <type>java.lang.String</type>
            <description>Enables free text search. Supply a function that accepts two arguments, the search query and a completion function. The completion function should be called with the filtered query collection as its only argument. This function should be fast, and is presumed to only execute locally without requiring network access. This function is optional.</description>
        </attribute>
        <attribute>
            <name>onSearchClear</name>
            <required>false</required>
            <type>java.lang.String</type>
            <description>Function name to invoke on search clear. This function accepts no arguments, but the datalist is the this variable.</description>
        </attribute>
        <attribute>
            <name>afterSearchClear</name>
            <required>false</required>
            <type>java.lang.String</type>
            <description>Function name to invoke after the list is refreshed post search clear.</description>
        </attribute>
        <attribute>
            <name>externalButtonsCallback</name>
            <required>false</required>
            <type>java.lang.String</type>
            <description>Callback invoked during buttons layout to add external buttons.</description>
        </attribute>
        <attribute>
            <name>selectionButtonsCallback</name>
            <required>false</required>
            <type>java.lang.String</type>
            <description>Callback invoked during buttons layout to add buttons that appear when one ore more list items are selected.</description>
        </attribute>
        <attribute>
            <name>indexedSearchText</name>
            <required>false</required>
            <type>java.lang.String</type>
            <description>Provide explanatory text to place in the search bix when it is first rendered.</description>
        </attribute>
        <attribute>
            <name>indexedSearchType</name>
            <required>false</required>
            <type>java.lang.String</type>
            <description>Set to search to have a stylized search box. All other settings yield a plain text box.</description>
        </attribute>
        <attribute>
            <name>scrollContents</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
            <defaultValue>true</defaultValue>
            <description>Indicate if the contents of the list should be scrollable.</description>
        </attribute>
        <attribute>
            <name>splitAction</name>
            <required>false</required>
            <type>java.lang.String</type>
            <description>Specify if a split icon will be used in the list elements. In that case, this action is invoked whenever that split link is clicked.</description>
        </attribute>
        <attribute>
            <name>headerText</name>
            <required>false</required>
            <type>java.lang.String</type>
            <description>Specify text to appear in a divider at the top of the list.</description>
        </attribute>
        <attribute>
            <name>footerLoadingText</name>
            <required>false</required>
            <type>java.lang.String</type>
            <description>Specify text to appear in the footer loading animation.</description>
        </attribute>
        <attribute>
            <name>sortAscendingButton</name>
            <required>false</required>
            <type>java.lang.String</type>
            <description>Selector used to find the sort-ascending button for this list.</description>
        </attribute>
        <attribute>
            <name>sortDescendingButton</name>
            <required>false</required>
            <type>java.lang.String</type>
            <description>Selector used to find the sort-descending button for this list.</description>
        </attribute>
        <attribute>
            <name>pullToRefresh</name>
            <required>false</required>
            <type>java.lang.String</type>
            <description>Function name to call when the user pulls down on the list to refresh it.</description>
        </attribute>
        <attribute>
            <name>pushToRefresh</name>
            <required>false</required>
            <type>java.lang.String</type>
            <description>Function name to call when the user pushes down on the list bottom to get more items.</description>
        </attribute>
      <attribute>
         <name>autodividers</name>
         <required>false</required>
         <type>java.lang.Boolean</type>
         <defaultValue>false</defaultValue>
         <description>Indicates if jquery auto-dividers ares going to be used in this list</description>
      </attribute>
      <attribute>
         <name>autodividersSelectorCallback</name>
         <required>false</required>
         <type>java.lang.String</type>
         <description>Function to invoke on a row to get the section name in a list with auto dividers.</description>
      </attribute>
      <attribute>
         <name>noSelectOnPagination</name>
         <required>false</required>
         <type>java.lang.Boolean</type>
         <defaultValue>false</defaultValue>
         <description>Indicates that paginating back or forward should not trigger the first item on the new page to be selected.</description>
      </attribute>
      <attribute>
          <name>buttonPos</name>
          <required>false</required>
          <type>java.lang.String</type>
          <defaultValue>left</defaultValue>
          <description>Set to left to render sort and filter buttons on the left. Set to right to render them on the right.</description>
      </attribute>
      <attribute>
         <name>showDataIcon</name>
         <required>false</required>
         <type>java.lang.Boolean</type>
         <defaultValue>true</defaultValue>
         <description>Indicates that the arrow icon (right side) is displayed in list items.</description>
      </attribute>
      <attribute>
         <name>multiSelect</name>
         <required>false</required>
         <type>java.lang.Boolean</type>
         <defaultValue>false</defaultValue>
         <description>Enable multi select of list items.</description>
      </attribute>
      <attribute>
          <name>loadingText</name>
          <required>false</required>
          <type>java.lang.String</type>
          <description>Text to display when the datalist is used as a loading delegate.</description>
      </attribute>
   </attributes>
</component>