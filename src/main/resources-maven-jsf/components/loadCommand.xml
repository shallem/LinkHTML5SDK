<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE component SYSTEM "../misc/component.dtd" [
<!ENTITY widget_var_attribute					SYSTEM "../entities/widget_var_attribute.xml">
]>
<component>
    <tag>loadCommand</tag>
    <tagClass>org.helix.mobile.component.loadcommand.LoadCommandTag</tagClass>
    <componentClass>org.helix.mobile.component.loadcommand.LoadCommand</componentClass>
    <componentHandlerClass>org.helix.mobile.component.loadcommand.LoadCommandHandler</componentHandlerClass>
    <componentType>org.helix.mobile.LoadCommand</componentType>
    <componentFamily>org.helix.mobile.component</componentFamily>
    <rendererType>org.helix.mobile.component.LoadCommandRenderer</rendererType>
    <rendererClass>org.helix.mobile.component.loadcommand.LoadCommandRenderer</rendererClass>
    <parent>javax.faces.component.UIOutput</parent>
    <description>LoadCommand provides a way to easily load all of the data required to render an application page.</description>
    <interfaces>
        <interface>
            <name>org.primefaces.component.api.Widget</name>
        </interface>
    </interfaces>
    <attributes>
            &widget_var_attribute;
        <attribute>
            <name>name</name>
            <required>true</required>
            <type>java.lang.String</type>
            <description>Name of the javascript function generated from this markup.</description>
        </attribute>
        <attribute>
            <name>error</name>
            <required>false</required>
            <type>java.lang.String</type>
            <description>String property containing an error message, if one occurs. Return null if no error.</description>
        </attribute>
        <attribute>
            <name>onstart</name>
            <required>false</required>
            <type>java.lang.String</type>
            <description>Javascript to execute before the load is launched.</description>
        </attribute>
        <attribute>
            <name>oncomplete</name>
            <required>false</required>
            <type>java.lang.String</type>
            <description>Javascript to execute when the load is complete.</description>
        </attribute>
        <attribute>
            <name>loadingMessage</name>
            <required>false</required>
            <type>java.lang.String</type>
            <description>Message to display when executing this load command.</description>
        </attribute>
        <attribute>
            <name>syncingMessage</name>
            <required>false</required>
            <type>java.lang.String</type>
            <description>Message to display when syncing data to the local disk.</description>
        </attribute>
        <attribute>
            <name>loadingColor</name>
            <required>false</required>
            <type>java.lang.String</type>
            <description>Valid HTML color used to create an animation from black to the target color in the header bar (if present).</description>
        </attribute>
        <attribute>
            <name>loadingAsync</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
            <description>Indicates if the sync'ing action should be communicated to the user asynchronously rather than with a loader that blocks the entire UI.</description>
            <defaultValue>true</defaultValue>
        </attribute>
        <attribute>
            <name>loadingTheme</name>
            <required>false</required>
            <type>java.lang.String</type>
            <description>jQuery Mobile theme for the loader. Default is 'a'.</description>
        </attribute>
        <attribute>
            <name>syncFieldsOverride</name>
            <required>false</required>
            <type>java.lang.String</type>
            <description>Name of an override function for the field synchronization. See Helix.DB.Utils.defaultFieldSync for method signature.</description>
        </attribute>
        <attribute>
            <name>refineOverride</name>
            <required>false</required>
            <type>java.lang.String</type>
            <description>Name of an override function for array field synchronization. Used when a particular load command only synchronizes a portion of a database table.</description>
        </attribute>
        <attribute>
            <name>addHook</name>
            <required>false</required>
            <type>java.lang.String</type>
            <description>Hook that is invoked each time an object is added. The object to add is passed as an argument.</description>
        </attribute>
        <attribute>
            <name>deleteHook</name>
            <required>false</required>
            <type>java.lang.String</type>
            <description>Hook that is invoked each time an object is deleted. The object to remove is passed as an argument.</description>
        </attribute>
        <attribute>
            <name>updateHook</name>
            <required>false</required>
            <type>java.lang.String</type>
            <description>Hook that is invoked each time an object is updated. The updated object is passed as an argument.</description>
        </attribute>
        <attribute>
            <name>cmd</name>
            <required>true</required>
            <type>javax.el.MethodExpression</type>
            <method-signature>java.lang.Object cmd()</method-signature>
            <description>A 0 argument command used to execute the load phase of the load command.</description>
        </attribute>
        <attribute>
            <name>value</name>
            <required>true</required>
            <type>java.lang.Object</type>
            <description>Retrieve a serializeable object post load. Prior to load this should return an empty object that can be used to generate a template schema.</description>
        </attribute>
    </attributes>
</component>